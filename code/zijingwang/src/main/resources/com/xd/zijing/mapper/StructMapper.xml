<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xd.zijing.mapper.StructMapper" >
  <resultMap id="BaseResultMap" type="com.xd.zijing.entity.Struct" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="departmentID" property="departmentid" jdbcType="INTEGER" />
    <result column="cinemaName" property="cinemaname" jdbcType="VARCHAR" />
    <result column="departmentName" property="departmentname" jdbcType="VARCHAR" />
    <result column="leader" property="leader" jdbcType="VARCHAR" />
    <result column="higherDepartmentID" property="higherdepartmentid" jdbcType="INTEGER" />
    <result column="isTop" property="istop" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    departmentID, cinemaName, departmentName, leader, higherDepartmentID, isTop
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from structinfo
    where departmentID = #{departmentid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from structinfo
    where departmentID = #{departmentid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xd.zijing.entity.Struct" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into structinfo (departmentID, cinemaName, departmentName, 
      leader, higherDepartmentID, isTop
      )
    values (#{departmentid,jdbcType=INTEGER}, #{cinemaname,jdbcType=VARCHAR}, #{departmentname,jdbcType=VARCHAR}, 
      #{leader,jdbcType=VARCHAR}, #{higherdepartmentid,jdbcType=INTEGER}, #{istop,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xd.zijing.entity.Struct" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into structinfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="departmentid != null" >
        departmentID,
      </if>
      <if test="cinemaname != null" >
        cinemaName,
      </if>
      <if test="departmentname != null" >
        departmentName,
      </if>
      <if test="leader != null" >
        leader,
      </if>
      <if test="higherdepartmentid != null" >
        higherDepartmentID,
      </if>
      <if test="istop != null" >
        isTop,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="departmentid != null" >
        #{departmentid,jdbcType=INTEGER},
      </if>
      <if test="cinemaname != null" >
        #{cinemaname,jdbcType=VARCHAR},
      </if>
      <if test="departmentname != null" >
        #{departmentname,jdbcType=VARCHAR},
      </if>
      <if test="leader != null" >
        #{leader,jdbcType=VARCHAR},
      </if>
      <if test="higherdepartmentid != null" >
        #{higherdepartmentid,jdbcType=INTEGER},
      </if>
      <if test="istop != null" >
        #{istop,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xd.zijing.entity.Struct" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update structinfo
    <set >
      <if test="cinemaname != null" >
        cinemaName = #{cinemaname,jdbcType=VARCHAR},
      </if>
      <if test="departmentname != null" >
        departmentName = #{departmentname,jdbcType=VARCHAR},
      </if>
      <if test="leader != null" >
        leader = #{leader,jdbcType=VARCHAR},
      </if>
      <if test="higherdepartmentid != null" >
        higherDepartmentID = #{higherdepartmentid,jdbcType=INTEGER},
      </if>
      <if test="istop != null" >
        isTop = #{istop,jdbcType=INTEGER},
      </if>
    </set>
    where departmentID = #{departmentid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xd.zijing.entity.Struct" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update structinfo
    set cinemaName = #{cinemaname,jdbcType=VARCHAR},
      departmentName = #{departmentname,jdbcType=VARCHAR},
      leader = #{leader,jdbcType=VARCHAR},
      higherDepartmentID = #{higherdepartmentid,jdbcType=INTEGER},
      isTop = #{istop,jdbcType=INTEGER}
    where departmentID = #{departmentid,jdbcType=INTEGER}
  </update>
  <select id="selectAll" parameterType="int" resultMap="BaseResultMap">
    SELECT
    departmentID,
    cinemaName,
    departmentName,
    leader,
    higherDepartmentID,
    isTop
    FROM
    structinfo
    LIMIT #{start},#{pageSize}
  </select>
  <select id="countAll" resultType="int">
    SELECT COUNT(1) FROM structinfo
  </select>
</mapper>